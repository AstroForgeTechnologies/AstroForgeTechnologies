---
import { slugifyStr } from "../../../utils/slugify";
import { getCollection } from "astro:content";
import { slugifyStr } from "../../../utils/slugify";
import { SITE } from "@config";
import Footer from "@components/Footer.astro";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import ScrollProgressIndicator from "@components/ScrollProgressIndicator.svelte";
import Tag from "../../../components/Tag.astro";
import Hr from "../../../components/Hr.astro";
import { getUniqueTagsOfTagStrings } from "../../../utils/tagHelper";

export async function getStaticPaths() {
  const sections = await getCollection("section");

  return sections.map((section, i) => ({
    params: { slug: slugifyStr(section.slug) },
    props: {
      section,
      before: i > 0 ? sections[i - 1] : undefined,
      after: i < sections.length - 1 ? sections[i + 1] : undefined,
    },
  }));
}

const { slug } = Astro.params;

const { section, before, after } = Astro.props;
const { title, tags } = section.data;
const foundTags = tags ? getUniqueTagsOfTagStrings(tags) : [];
const { Content } = await section.render();
---

<Layout title={`${title} | ${SITE.title}`}>
  <ScrollProgressIndicator client:only="svelte" />
  <Main
    pageTitle={title}
    titleTransition={slugifyStr(title)}
    headingClass="text-3xl sm:text-4xl font-extrabold bg-gradient-to-br from-primary to-accent bg-clip-text text-transparent inline-block"
    topType="back"
  >
    <article id="about" class="prose mt-12 mb-16 max-w-4xl prose-img:border-0">
      <Content />
    </article>
    <Hr noPadding />
    <div class="flex flex-row items-center justify-between mt-8">
      {
        before && (
          <a
            href={`/section/${slugifyStr(before.slug)}`}
            class="mr-auto hover:text-accent transition-colors duration-200"
          >
            ← {before.data.title}
          </a>
        )
      }
      {
        after && (
          <a
            href={`/section/${slugifyStr(after.slug)}`}
            class="ml-auto hover:text-accent transition-colors duration-200"
          >
            {after.data.title} →
          </a>
        )
      }
    </div>
    <ul class="mt-5 mb-8">
      Related Tags: {foundTags.map(tag => <Tag tag={tag} />)}
    </ul>
  </Main>
  <Footer />
</Layout>
